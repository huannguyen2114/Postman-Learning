{
	"info": {
		"_postman_id": "c7f2f3e9-3aa8-441e-a719-00732ce63579",
		"name": "Huan's COLLECTION",
		"description": "version",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34787583",
		"_collection_link": "https://universal-trinity-729970.postman.co/workspace/Huan-team~2ca9b229-5249-4a45-898f-145051124051/collection/34787583-c7f2f3e9-3aa8-441e-a719-00732ce63579?action=share&source=collection_link&creator=34787583"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Response status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"// Extract the token from the response body and set it in the environment",
									"pm.test(\"Extract and set the authentication token in the environment\", function () {",
									"    var responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('token').that.is.a('string').and.not.empty;",
									"    console.log(\"response:\" + responseData.token);",
									"    pm.environment.set(\"authToken\", responseData.token);",
									"});",
									"",
									"pm.execution.setNextRequest(\"getUserByToken\");",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"emilys\",\n    \"password\": \"emilyspass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "This endpoint is used to authenticate and login a user. To make a successful request, you need to provide the username and password in the request body. The request should be sent as an HTTP POST to {{baseUrl}}/auth/login with a raw JSON payload.\n\n### Request Body\n\n- `username` (string): The username of the user.\n    \n- `password` (string): The password of the user.\n    \n\n#### Example\n\n``` json\n{\n  \"username\": \"example_username\",\n  \"password\": \"example_password\"\n}\n\n ```\n\n### Response\n\nUpon a successful authentication, the server will respond with a status code of 200 and a JSON object containing the user's information and an authentication token.\n\n#### Success Response\n\n- Status: 200 OK\n    \n- Content-Type: application/json\n    \n    ``` json\n          {\n          \"id\": 0,\n          \"username\": \"\",\n          \"email\": \"\",\n          \"firstName\": \"\",\n          \"lastName\": \"\",\n          \"gender\": \"\",\n          \"image\": \"\",\n          \"token\": \"\"\n          }\n    \n     ```"
					},
					"response": []
				},
				{
					"name": "getUserByToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to pass the 'token' field to the bearer token in the getUserByToken request",
									"pm.test(\"Token is passed to the bearer token in the getUserByToken request\", function () {",
									"    pm.expect(pm.request.headers.get('Authorization')).to.include('Bearer ' + pm.environment.get('authToken'));",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.environment.get('authToken');",
									"console.log(token);",
									"",
									"pm.request.headers.upsert({",
									"    key: 'Authorization',",
									"    value: `Bearer ${token}`",
									"",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "This endpoint sends an HTTP GET request to retrieve the authenticated user's information. The response of this request can be documented as a JSON schema to provide a clear structure of the data that will be returned."
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "getProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSingleProduct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}